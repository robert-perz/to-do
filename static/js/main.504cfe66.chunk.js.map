{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","state","txt","checked","date","Date","toISOString","slice","handleTaskName","e","setState","target","value","handleImportantCheckbox","handleSetDate","handleAddTaskButton","length","props","addTask","alert","minDate","maxDate","className","htmlFor","id","this","type","placeholder","onChange","min","max","onClick","name","Component","Task","status","remove","task","active","important","finishDate","style","color","finish","TaskList","tasks","removeTask","taskStatus","filter","done","sort","a","b","toLowerCase","activeTasks","map","key","doneTasks","App","counter","handleRemoveTask","indexToRemove","findIndex","splice","handleTaskStatus","forEach","getTime","newTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"2UA4DeA,G,iNAxDbC,MAAQ,CACNC,IAAK,GACLC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,K,EAE1CC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZR,IAAKO,EAAEE,OAAOC,S,EAGlBC,wBAA0B,WACxB,EAAKH,SAAS,CACZP,SAAU,EAAKF,MAAME,W,EAGzBW,cAAgB,SAACL,GACf,EAAKC,SAAS,CACZN,KAAMK,EAAEE,OAAOC,S,EAGnBG,oBAAsB,WAAO,IAAD,EACK,EAAKd,MAA5BC,EADkB,EAClBA,IAAKC,EADa,EACbA,QAASC,EADI,EACJA,KAClBF,EAAIc,OAAS,EACH,EAAKC,MAAMC,QAAQhB,EAAKC,EAASC,IAE3C,EAAKM,SAAS,CACZR,IAAK,GACLC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,MAI5CY,MAAM,mD,wEAIR,IAAMC,GAAU,IAAIf,MAAOC,cAAcC,MAAM,EAAG,IAC5Cc,EAAO,UAA6C,GAAvC,IAAIhB,MAAOC,cAAcC,MAAM,EAAG,GAAS,EAAjD,UACb,OACE,yBAAKe,UAAU,WACb,yBAAKA,UAAU,uBACb,2BAAOC,QAAQ,YACf,2BAAOC,GAAG,UAAUF,UAAU,qBAAqBV,MAAOa,KAAKxB,MAAMC,IAAKwB,KAAK,OAAOC,YAAY,qCAAqCC,SAAUH,KAAKjB,iBACtJ,2BAAOc,UAAU,wBAAwBI,KAAK,WAAWvB,QAASsB,KAAKxB,MAAME,QAC3EqB,GAAG,YAAYI,SAAUH,KAAKZ,0BAChC,2BAAOS,UAAU,qBAAqBC,QAAQ,aAA9C,eAEF,yBAAKD,UAAU,wBACb,2BAAOA,UAAU,sBAAsBC,QAAQ,QAA/C,qBACA,2BAAOD,UAAU,sBAAsBI,KAAK,OAAOd,MAAOa,KAAKxB,MAAMG,KAAMyB,IAAKT,EAASU,IAAKT,EAASG,GAAG,OAAOI,SAAUH,KAAKX,gBAChI,4BAAQQ,UAAU,oBAAoBS,QAASN,KAAKV,oBAAqBiB,KAAK,YAA9E,W,GAnDYC,cC0BPC,G,MA1BF,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAItBnC,EAAiDmC,EAAjDnC,IAAKE,EAA4CiC,EAA5CjC,KAAMoB,EAAsCa,EAAtCb,GAAIc,EAAkCD,EAAlCC,OAAQC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WAC1C,GAAIF,EACF,OACE,yBAAKhB,UAAU,cACb,uBAAGmB,MAAOF,EAPO,CACrBG,MAAO,WAMoC,KAAMpB,UAAU,mBAAkB,0BAAMA,UAAU,wBAAwBpB,IACjH,yBAAKoB,UAAU,2BAAf,WAAkDlB,GAClD,4BAAQ2B,QAAS,kBAAMI,EAAOX,IAAKF,UAAU,wBAA7C,YACA,4BAAQS,QAAS,kBAAMK,EAAOZ,IAAKF,UAAU,0BAA7C,WAIJ,IAAMqB,EAAS,IAAItC,KAAKmC,GAAYlC,cAAcC,MAAM,EAAG,IAC3D,OACE,yBAAKe,UAAU,YACb,uBAAGA,UAAU,iBAAgB,0BAAMA,UAAU,sBAAsBpB,IACnE,yBAAKoB,UAAU,wBAAf,UAA8ClB,GAC9C,0BAAMkB,UAAU,yBAAhB,QAA8CqB,GAC9C,4BAAQZ,QAAS,kBAAMK,EAAOZ,IAAKF,UAAU,wBAA7C,aCWOsB,G,MA9BE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAMC,EAA2B,EAA3BA,WAAWC,EAAgB,EAAhBA,WAC5BT,EAASO,EAAMG,OAAO,SAAAX,GAAI,OAAIA,EAAKC,SACnCW,EAAOJ,EAAMG,OAAO,SAAAX,GAAI,OAAKA,EAAKC,SAExCA,EAAOY,KAAK,SAACC,EAAGC,GAGd,OAFAD,EAAIA,EAAEjD,IAAImD,gBACVD,EAAIA,EAAElD,IAAImD,gBACS,EACfF,EAAIC,EAAU,EACX,IAETH,EAAKC,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEZ,WAAaW,EAAEX,aAErC,IAAMc,EAAchB,EAAOiB,IAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAMmB,IAAKnB,EAAKb,GAAIa,KAAMA,EAAMD,OAAQU,EAAYX,OAAQY,MAC7FU,EAAYR,EAAKM,IAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAMmB,IAAKnB,EAAKb,GAAIa,KAAMA,EAAMD,OAAQU,EAAYX,OAAQY,MAC/F,OACE,oCACE,yBAAKzB,UAAU,wBACb,yBAAKA,UAAU,UACZgC,EAAYtC,OAAS,EAAI,wBAAIM,UAAU,iBAAd,eAA2CgC,EAAYtC,QAAe,wBAAIM,UAAU,6BAAd,kBAC/FgC,GAEH,yBAAKhC,UAAU,QACZmC,EAAUzC,OAAS,EAAI,wBAAIM,UAAU,eAAd,kBAA4CmC,EAAUzC,QAAe,KAC5FyC,OCiCIC,G,iNAxDbzD,MAAQ,CACN4C,MAAO,I,EAETc,QAAU,E,EACVC,iBAAmB,SAACpC,GAClB,IAAMqB,EAAK,YAAO,EAAK5C,MAAM4C,OACvBgB,EAAgBhB,EAAMiB,UAAU,SAAAzB,GAAI,OAAIA,EAAKb,KAAOA,IAC1DqB,EAAMkB,OAAOF,EAAe,GAC5B,EAAKnD,SAAS,CACZmC,W,EAGJmB,iBAAmB,SAACxC,GAClB,IAAMqB,EAAK,YAAO,EAAK5C,MAAM4C,OAC7BA,EAAMoB,QAAQ,SAAA5B,GACRA,EAAKb,KAAOA,IACda,EAAKC,QAAS,EACdD,EAAKG,YAAa,IAAInC,MAAO6D,aAGjC,EAAKxD,SAAS,CACZmC,W,EAGJ3B,QAAU,SAAChB,EAAKC,EAASC,GACvB,IAAM+D,EAAU,CACd3C,GAAI,EAAKmC,QACTzD,MACAE,OACAmC,UAAWpC,EACXmC,QAAQ,EACRE,WAAY,MAOd,OALA,EAAKmB,UACL,EAAKjD,SAAS,SAAA0D,GAAS,MAAK,CAC1BvB,MAAM,GAAD,mBAAMuB,EAAUvB,OAAhB,CAAuBsB,QAGvB,G,wEAGP,OACE,oCACE,wBAAI7C,UAAU,aAAd,QACA,kBAAC,EAAD,CACEJ,QAASO,KAAKP,UAEhB,kBAAC,EAAD,CACE2B,MAAOpB,KAAKxB,MAAM4C,MAClBC,WAAYrB,KAAKmC,iBACjBb,WAAYtB,KAAKuC,wB,GAnDT/B,cCAlBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.504cfe66.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../Sass/_AddTask.scss';\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    txt: '',\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0, 10)\r\n  }\r\n  handleTaskName = (e) => {\r\n    this.setState({\r\n      txt: e.target.value\r\n    })\r\n  }\r\n  handleImportantCheckbox = () => {\r\n    this.setState({\r\n      checked: !this.state.checked\r\n    })\r\n  }\r\n  handleSetDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value\r\n    })\r\n  }\r\n  handleAddTaskButton = () => {\r\n    const { txt, checked, date } = this.state\r\n    if (txt.length > 1) {\r\n      const add = this.props.addTask(txt, checked, date);\r\n      if (add) {\r\n        this.setState({\r\n          txt: '',\r\n          checked: false,\r\n          date: new Date().toISOString().slice(0, 10)\r\n        })\r\n      }\r\n    } else {\r\n      alert('Task name should be longer than one character.')\r\n    }\r\n  }\r\n  render() {\r\n    const minDate = new Date().toISOString().slice(0, 10);\r\n    const maxDate = `${new Date().toISOString().slice(0, 4) * 1 + 2}-08-13`;\r\n    return (\r\n      <div className='addtask'>\r\n        <div className=\"addtask addtask-txt\">\r\n          <label htmlFor=\"tasktxt\"></label>\r\n          <input id='tasktxt' className='addtask-txt__input' value={this.state.txt} type=\"text\" placeholder='Click and write task to do here...' onChange={this.handleTaskName} />\r\n          <input className='addtask-txt__checkbox' type=\"checkbox\" checked={this.state.checked}\r\n            id=\"important\" onChange={this.handleImportantCheckbox} />\r\n          <label className='addtask-txt__label' htmlFor=\"important\">Important?</label>\r\n        </div>\r\n        <div className=\"addtask addtask-date\">\r\n          <label className=\"addtask-date__label\" htmlFor=\"date\">Set finish date: </label>\r\n          <input className=\"addtask-date__input\" type=\"date\" value={this.state.date} min={minDate} max={maxDate} id=\"date\" onChange={this.handleSetDate} />\r\n          <button className=\"addtask-date__btn\" onClick={this.handleAddTaskButton} name='add task'>+</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddTask;","import React from 'react';\r\nimport '../Sass/_Task.scss';\r\n\r\nconst Task = ({ status, remove, task }) => {\r\n  const importantStyle = {\r\n    color: '#ff1493'\r\n  }\r\n  const { txt, date, id, active, important, finishDate } = task\r\n  if (active) {\r\n    return (\r\n      <div className=\"activetask\">\r\n        <p style={important ? importantStyle : null} className='activetask__txt'><span className='activetask__txt-span'>{txt}</span></p>\r\n        <div className='activetask__finish-date'>Do to : {date}</div>\r\n        <button onClick={() => status(id)} className=\"activetask__done-btn\">Finished</button>\r\n        <button onClick={() => remove(id)} className=\"activetask__delete-btn\">Delete</button>\r\n      </div>\r\n      );\r\n  } else {\r\n    const finish = new Date(finishDate).toISOString().slice(0, 10);\r\n    return (\r\n      <div className='donetask'>\r\n        <p className='donetask__txt'><span className='donetask__txt-span'>{txt}</span></p>\r\n        <div className='donetask__start-date'>Do to: {date}</div>\r\n        <span className='donetask__finish-date'>End: {finish}</span>\r\n        <button onClick={() => remove(id)} className=\"donetask__delete-btn\">Delete</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\nimport '../Sass/_TaskList.scss';\r\n\r\n\r\nconst TaskList = ({tasks,removeTask,taskStatus}) => {\r\n  const active = tasks.filter(task => task.active);\r\n  const done = tasks.filter(task => !task.active)\r\n\r\n  active.sort((a, b) => {\r\n    a = a.txt.toLowerCase();\r\n    b = b.txt.toLowerCase();\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0;\r\n  })\r\n  done.sort((a, b) => b.finishDate - a.finishDate);\r\n \r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} remove={removeTask} status={taskStatus} />)\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} remove={removeTask} status={taskStatus} />)\r\n  return (\r\n    <>\r\n      <div className=\"tasks-list-container\">\r\n        <div className=\"active\">\r\n          {activeTasks.length > 0 ? <h3 className='active__title'>Tasks to do {activeTasks.length}</h3> : <h3 className='active__title-conditional'>No tasks to do</h3>}\r\n          {activeTasks}\r\n        </div>\r\n        <div className=\"done\">\r\n          {doneTasks.length > 0 ? <h3 className='done__title'>Finished tasks {doneTasks.length}</h3> : null}\r\n          {doneTasks}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TaskList;\r\n\r\n","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport '../Sass/_App.scss';\n\nclass App extends Component {\n  state = {\n    tasks: []\n  }\n  counter = 0;\n  handleRemoveTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const indexToRemove = tasks.findIndex(task => task.id === id);\n    tasks.splice(indexToRemove, 1);\n    this.setState({\n      tasks\n    })\n  }\n  handleTaskStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n  addTask = (txt, checked, date) => {\n    const newTask = {\n      id: this.counter,\n      txt,\n      date,\n      important: checked,\n      active: true,\n      finishDate: null\n    }\n    this.counter++;\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, newTask]\n    })\n    )\n    return true;\n  }\n  render() {\n    return (\n      <>\n        <h1 className='app-title'>ToDo</h1>\n        <AddTask\n          addTask={this.addTask}\n        />\n        <TaskList\n          tasks={this.state.tasks}\n          removeTask={this.handleRemoveTask}\n          taskStatus={this.handleTaskStatus}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/imports.min.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}